# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='code --wait'
fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

export PATH="$HOME/.rd/bin:$PATH"

# Sync Brewfile with Chezmoi
syncbrewtochez() {
    # Run brew bundle dump to update the Brewfile
    brew bundle dump --formula --casks --tap --mas --whalebrew --file "$HOME/.local/share/chezmoi/tmp_brewfile" --force

    # Define the input and output file names
    input_file="$HOME/.local/share/chezmoi/run_once_before_install.sh.tmpl"
    tmp_brew_file="$HOME/.local/share/chezmoi/tmp_brewfile"
    tmp_output="$HOME/.local/share/chezmoi/temp_output.sh.tmpl"

    # Define the start and end marker lines
    start_marker="### BREWFILE START"
    end_marker="### BREWFILE END"

    # Get the line numbers of the start and end markers
    start_line=$(grep -n "$start_marker" "$input_file" | cut -f1 -d:)
    end_line=$(grep -n "$end_marker" "$input_file" | cut -f1 -d:)

    # Create the new content with the content from the another file
    head -n $((start_line)) "$input_file" > "$tmp_output"
    cat "$tmp_brew_file" >> "$tmp_output"
    tail -n +$((end_line)) "$input_file" >> "$tmp_output"

    # Replace the original file with the new file
    mv "$tmp_output" "$input_file"

    # Remove the temporary brewfile
    rm "$tmp_brew_file"
}

# 1Password
source $HOME/.config/op/plugins.sh

# Homebrew
eval "$(/opt/homebrew/bin/brew shellenv)"

# GitHub PAT
export GH_USER="pmpaulino"
export GH_PAT="op://Private/xndcgybadcw6stdi6o6xjexexq/token"

# Go
export GOPATH=$HOME/go
export GOROOT="$(brew --prefix golang)/libexec"
export PATH="$PATH:${GOPATH}/bin:${GOROOT}/bin"

# Grafana Cloud
export GRAF_USER="op://Private/oac7q5xjasskyomrv24ubmo5iq/GRAF_USER"
export GRAF_PAT="op://Private/oac7q5xjasskyomrv24ubmo5iq/GRAF_PAT"

{{- if eq .chezmoi.hostname "Mac-WP2DG2N2" }}
# client_1
export GITLAB_TOKEN_="op://Private/jshezjjznm6m676hkesgisns7i/GITLAB_TOKEN"
export AWS_DEFAULT_REGION="op://Private/jshezjjznm6m676hkesgisns7i/AWS_DEFAULT_REGION"
export AWS_DEFAULT_PROFILE="op://Private/jshezjjznm6m676hkesgisns7i/AWS_DEFAULT_PROFILE"
alias awslogin="op://Private/jshezjjznm6m676hkesgisns7i/awslogin"
{{- end }}
