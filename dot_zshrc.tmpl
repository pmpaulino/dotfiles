# Amazon Q pre block. Keep at the top of this file.
[[ -f "${HOME}/Library/Application Support/amazon-q/shell/zshrc.pre.zsh" ]] && builtin source "${HOME}/Library/Application Support/amazon-q/shell/zshrc.pre.zsh" 

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(1password aliases alias-finder ansible brew chezmoi colored-man-pages colorize command-not-found common-aliases direnv docker docker-compose fzf gatsby gcloud gh git-auto-fetch gnu-utils golang helm history istioctl jira kubectl kubectx macos nvm opentofu pre-commit python sigstore skaffold ssh sudo terraform thefuck themes tldr vscode zoxide)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
    export EDITOR='vim'
else
    export EDITOR='code --wait'
fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# 1Password
if [ -f "$HOME/.config/op/plugins.sh" ]; then
    source "$HOME/.config/op/plugins.sh"
fi

# Homebrew
{{- if eq .chezmoi.os "linux" }}
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
{{- else }}
eval "$(/opt/homebrew/bin/brew shellenv)"
{{- end }}

# GitHub PAT
export GH_USER="pmpaulino"
export GH_PAT="op://Private/xndcgybadcw6stdi6o6xjexexq/token"

# Go
export GOENV_ROOT="$HOME/.goenv"
export PATH="$GOENV_ROOT/bin:$PATH"
eval "$(goenv init -)"
export PATH="$GOROOT/bin:$PATH"
export PATH="$PATH:$GOPATH/bin"


# Grafana Cloud
export GRAF_USER="op://Private/oac7q5xjasskyomrv24ubmo5iq/GRAF_USER"
export GRAF_PAT="op://Private/oac7q5xjasskyomrv24ubmo5iq/GRAF_PAT"

{{- if eq .chezmoi.hostname "Mac-WP2DG2N2" }}
# client_1
export GITLAB_TOKEN_="op://Private/jshezjjznm6m676hkesgisns7i/GITLAB_TOKEN"
export AWS_DEFAULT_REGION="op://Private/jshezjjznm6m676hkesgisns7i/AWS_DEFAULT_REGION"
export AWS_DEFAULT_PROFILE="op://Private/jshezjjznm6m676hkesgisns7i/AWS_DEFAULT_PROFILE"
alias awslogin="op://Private/jshezjjznm6m676hkesgisns7i/awslogin"
{{- end }}

# Autocompletion
source <(kubectl completion zsh)

# NVM
# TODO: install nvm, curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# rye
# TODO: move to uv from rye
if [ -f "$HOME/.rye/env" ]; then
    source "$HOME/.rye/env"
fi

# draw.io
alias drawio="/Applications/draw.io.app/Contents/MacOS/draw.io"

# autocompletion
autoload -Uz compinit
zstyle ':completion:*' menu select
fpath+=~/.zfunc

# kpv3-cli
# if [ -f "$HOME/.kpv3-cli/bin/kpv3-cli" ]; then
#     source <($HOME/.kpv3-cli/bin/kpv3-cli source)
# fi

# if ! [ -s $HOME/.kpv3-cli/consent.yaml ]; then
#     kpv3-cli consent
# fi
# if ! [ -s $HOME/.kube/k8s-platform-v3 ]; then
#     kpv3-cli kubeconfig -w
# fi

export KUBECONFIG=/Users/patrick/Projects/pmpaulino/homelab/clusters/talos/tmp/kubeconfig

# thefuck
eval $(thefuck --alias)

# syntax highlighting
{{- if eq .chezmoi.os "linux" }}
source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
{{- else }}
source /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
{{- end }}

# zoxide
eval "$(zoxide init zsh)"

# fzf
export FZF_DEFAULT_OPTS=" \
    --color=bg+:#313244,bg:#1e1e2e,spinner:#f5e0dc,hl:#f38ba8 \
    --color=fg:#cdd6f4,header:#f38ba8,info:#cba6f7,pointer:#f5e0dc \
    --color=marker:#b4befe,fg+:#cdd6f4,prompt:#cba6f7,hl+:#f38ba8 \
    --color=selected-bg:#45475a \
    --multi"
source <(fzf --zsh)

alias tailscale="/Applications/Tailscale.app/Contents/MacOS/Tailscale"

# XDG
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_STATE_HOME="$HOME/.local/state"
export XDG_CONFIG_DIRS="/etc/xdg"
export XDG_CONFIG_DIRS="/etc/xdg"

export K9S_CONFIG="${HOME}/.config/k9s"

export PATH="/opt/homebrew/opt/openjdk@17/bin:$PATH"

# Amazon Q post block. Keep at the bottom of this file.
[[ -f "${HOME}/Library/Application Support/amazon-q/shell/zshrc.post.zsh" ]] && builtin source "${HOME}/Library/Application Support/amazon-q/shell/zshrc.post.zsh"

# dotnet
export DOTNET_ROOT="/opt/homebrew/opt/dotnet/libexec"
export PATH="/opt/homebrew/opt/dotnet@6/bin:$PATH"
export MONO_GAC_PREFIX="/opt/homebrew"

# java
# sudo ln -sfn /opt/homebrew/opt/openjdk@17/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk-17.jdk
export JAVA_HOME="/opt/homebrew/opt/openjdk@17"
export PATH="/opt/homebrew/opt/openjdk@17/bin:$PATH"
export CPPFLAGS="-I/opt/homebrew/opt/openjdk@17/include"

# ngrok
if command -v ngrok &>/dev/null; then
    eval "$(ngrok completion)"
fi
